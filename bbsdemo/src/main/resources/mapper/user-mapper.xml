<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.coderbbs.bbsdemo.dao.UserMapper">
    <!--写一个可以复用的sql的select范围，可以免去很多麻烦-->
    <sql id="selectFields">
        id, username, password, salt, email, type, status, activation_code, header_url, create_time
    </sql>

    <sql id="insertFields">
        username, password, salt, email, type, status, activation_code, header_url, create_time
    </sql>

    <!--这里的路径连接到写了调用sql数据方法的接口中。下面的select，id后的是调用的方法名，返回的类型是方法返回的类型
    这个type原本还应当包含包的路径，但因为在配置文件中指定过，所以可以不必添加-->
    <select id="selectById" resultType="User">
        select <include refid="selectFields"></include>
        from user
        where id = #{id}
    </select><!--这个井号大括号指的是引用的方法里的参数（select by id的输入参数）。这里面的语句就是sql语句-->
    <!--这下面的几种查询方法也同理-->
    <select id="selectByName" resultType="User">
        select <include refid="selectFields"></include>
        from user
        where username = #{username}
    </select>

    <select id="selectByEmail" resultType="User">
        select <include refid="selectFields"></include>
        from user
        where email = #{email}
    </select>

    <!--这个主键类型是因为新加进来的东西很复杂所以要写-->
    <insert id="insertUser" parameterType="User" keyProperty="id">
        insert into user (<include refid="insertFields"></include>)
        values(#{username}, #{password}, #{salt}, #{email}, #{type}, #{status},
        #{activationCode},#{headerUrl}, #{createTime})
    </insert>
    
    <update id="updateStatus">
        update user set status = #{status} where id = #{id}
    </update>

    <update id="updateHeader">
        update user set header_url = #{headerUrl} where id = #{id}
    </update>

    <update id="updatePassword">
        update user set password = #{password} where id = #{id}
    </update>


</mapper>